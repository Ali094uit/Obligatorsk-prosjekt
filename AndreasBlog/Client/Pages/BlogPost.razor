@page "/blogPost"
@using AndreasBlog.Shared;
@inject AndreasBlog.Client.Services.IBlogService blogService
@using System.Web

<h1>Tilgjengelige blogger</h1>

<div class="row">
    @if (Posts != null)
    {
        foreach (var post in Posts)
        {
            <table class="table">
                <thead></thead>
                <tbody>
                    <tr>
                        <td>
                            <p>@post.Title</p>
                            @if (!string.IsNullOrEmpty(post.Image))
                                @if (IsYouTubeLink(post.Image))
                                {
                                    <div class="video-container">
                                        <iframe width="300px" height="300px" src="@EmbedYouTubeLink(post.Image)" frameborder="0"></iframe>
                                    </div>
                                }
                                else
                                {
                                    <img src="@post.Image" alt="Blog Image" style="max-width: 100%; max-height: 200px;" />
                                }
                        </td>
                        <td>
                            <p>@post.Content</p>
                        </td>
                        <td>
                            <NavLink class="nav-link">
                                <a href="/post/@post.Title">Gå til blogg</a>
                            </NavLink>
                        </td>
                        </tr>
                        </tbody>
                    </table>
                }
            }
            else
            {
                <div class="badge text-center">Vennligst vent...</div>
            }

</div>

@code {

    private List<AndreasBlog.Shared.BlogPost> Posts = new List<AndreasBlog.Shared.BlogPost>();

    protected override async Task OnParametersSetAsync()
    {
        Posts = await blogService.GetAllBlogPosts();
    }


    private bool IsYouTubeLink(string link)
    {
        return link.Contains("youtube.com") || link.Contains("youtu.be");
    }

    private string EmbedYouTubeLink(string link)
    {
        // Bygg en innebygd lenke for YouTube-videoen
        var videoId = GetYouTubeVideoId(link);
        return $"https://www.youtube.com/embed/{videoId}";
    }

    private string GetYouTubeVideoId(string link)
    {
        // Hent video-ID fra YouTube-lenken
        var uri = new Uri(link);
        var query = uri.Query;
        var parameters = HttpUtility.ParseQueryString(query);
        return parameters["v"];
    }

}

